giEsta son las instrucciones de git



git config --global = abre la configuracion global


git config --global user.name "Mary Yuliana Jaramillo" # agrego el nombre usario

git config --global user.email maryyuliana@gmail.comm" agrego el correo

git config --global core.editor "code --wait" # configura el visual studio 
git config --global -e # Para ver la confirguración
git config --global core.autocrlf true ## configuración de salto linea




##Comandos
ls = listar todas las carpetas que tiene
pwd = donde se encuentran dentro de 
cd = dice en que carpeta
cd .. devolver de directorio
mkdir = crea un directorio
git init = inicializa el git repositorio
ls -a =muestra las carpetas ocultas
code . =abre la visual code en la carpeta que estamos ubicados
git status = dice el estado, si hay comit
git add nombrearchivo.extensión  lo pasamos a estado de estatus

## Si yo le doy git add nombrearchivo el va a agregar pero no esta comentado

git commit -m " Se escribe un comentario sobre los cambios realizados"

git commit -a: abre el visual para poner el cambio, se agrega en vc y se da guardad

git rm nombre.archivo.txt: elimina archvios 

git restore nombre archivo: restaura archvios

mv nombre-archivo.txt nuevo_nombre.txt

git status -s: Solo muestra lo que esta en los archvios verde listo para comentar

git diff: muestra las diferencia entre los archvios
git --staged : muestra el estado de las diferencias

git log --oneline: para mira el historial de los cambios
### CREACION DE RAMAS

git branch: dice cual rama estamos
git checkout -b nombre_rama

cat nombre_Archivo muestra el contenido del artchivo

### Hacer merge entre RAMAS

git merge ramab # Hay que esta parado en la rama principal y llamar  los cambios de las ramas

###Subir a la nube github

 git remote add origin https://github.com/maryyuliana/fundamentos_I.git

git push : para subir los cambios
git push  -u: para indicar que cree la rama
git push -u origin main : en origen la rama se llame main en mi caso master









